version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=hackathon_app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
      - POSTGRES_USER=hackathon
      - POSTGRES_PASSWORD=test123
      - POSTGRES_DB=hackathon_test
      - DATABASE_URL=postgresql://hackathon:test123@db:5432/hackathon_test
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=test123
      - REDIS_URL=redis://:test123@redis:6379/0
      - SECRET_KEY=dev-secret-key-for-testing
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hackathon-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=hackathon
      - POSTGRES_PASSWORD=test123
      - POSTGRES_DB=hackathon_test
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hackathon -d hackathon_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hackathon-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass test123
    volumes:
      - redis_test_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hackathon-network

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local

networks:
  hackathon-network:
    driver: bridge 